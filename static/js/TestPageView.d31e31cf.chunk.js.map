{"version":3,"sources":["component/TestPage/TestPage.module.scss","component/TestPage/TestPage.js","views/TestPageView.js"],"names":["module","exports","TestPage","useState","tests","setTests","index","setIndex","value","setValue","dispatch","useDispatch","a","axios","get","data","console","log","error","useEffect","getTests","then","moveNext","length","prevState","className","s","testsSection","testCard","questionNumber","questionNumber_currentQuestion","question","Group","onChange","e","target","answers","map","anwersItem","btnWrapper","nextBtn_disabled","disabled","nextBtn_active","onClick","actions","addResult","TestPageView","defaults","baseURL"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,aAAe,+BAA+B,SAAW,2BAA2B,eAAiB,iCAAiC,+BAAiC,iDAAiD,SAAW,2BAA2B,WAAa,6BAA6B,WAAa,6BAA6B,eAAiB,iCAAiC,iBAAmB,qC,8LCe1Z,SAASC,IAAY,IAAD,EACPC,mBAAS,MADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAEPF,mBAAS,GAFF,mBAE1BG,EAF0B,KAEnBC,EAFmB,OAGPJ,mBAAS,MAHF,mBAG1BK,EAH0B,KAGnBC,EAHmB,KAM3BC,EAAWC,cANgB,4CAkBjC,8BAAAC,EAAA,+EAE2BC,IAAMC,IAAI,sBAFrC,uBAEYC,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,uCAKIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALhC,kBAMW,IANX,0DAlBiC,sBA2BjCC,qBAAU,YA3BuB,2CA4B/BC,GAAWC,MAAK,SAAAjB,GAAK,OAAIC,EAASD,EAAMW,KAAKX,YAC5C,IAEH,IAIMkB,EAAW,WACXhB,IAAUF,EAAMmB,OAAS,IAG7Bd,EAAS,MACTF,GAAS,SAAAiB,GAAS,OAAIA,EAAY,OASpC,OACE,mCACGpB,GACC,0BAASqB,UAAWC,IAAEC,aAAtB,UACE,sBAAKF,UAAWC,IAAEE,SAAlB,UACE,oBAAGH,UAAWC,IAAEG,eAAhB,qBACW,IACT,sBAAMJ,UAAWC,IAAEI,+BAAnB,mBACExB,EAAQ,KACC,IAJb,UAOA,oBAAImB,UAAWC,IAAEK,SAAjB,SAA4B3B,EAAME,GAAOyB,WACzC,cAAC,IAAMC,MAAP,CAAaC,SA/BF,SAAAC,GACnBlB,QAAQC,IAAIiB,EAAEC,OAAO3B,OACrBC,EAASyB,EAAEC,OAAO3B,QA6B2BA,MAAOA,EAA5C,SACGJ,EAAME,GAAO8B,QAAQC,KAAI,SAAAN,GAAQ,OAChC,mCACE,cAAC,IAAD,CAAOvB,MAAOuB,EAAUN,UAAWC,IAAEY,WAArC,SACGP,cAMX,sBAAKN,UAAWC,IAAEa,WAAlB,UACa,IAAVjC,EACC,wBAAQmB,UAAWC,IAAEc,iBAAkBC,UAAQ,EAA/C,+BAIA,wBAAQhB,UAAWC,IAAEgB,eAAgBC,QApChC,YACA,IAAXrC,GAGJC,GAAS,SAAAiB,GAAS,OAAIA,EAAY,MAgCxB,+BAIAhB,EAIY,KAAVF,EACF,wBACEmB,UAAWC,IAAEgB,eADf,yBAQA,wBACEjB,UAAWC,IAAEgB,eAEbC,QArFF,WACVrB,IAHsBZ,EAASkC,IAAQC,UAAU,UAAW,UAoFlD,2BAZA,wBAAQpB,UAAWC,IAAEc,iBAAkBC,UAAQ,EAA/C,mCCjGC,SAASK,IACtB,OACE,mCACE,cAAC5C,EAAD,MDSNW,IAAMkC,SAASC,QAAU","file":"static/js/TestPageView.d31e31cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"testsSection\":\"TestPage_testsSection__9fHRo\",\"testCard\":\"TestPage_testCard__3r52z\",\"questionNumber\":\"TestPage_questionNumber__36OsB\",\"questionNumber_currentQuestion\":\"TestPage_questionNumber_currentQuestion__1A-LU\",\"question\":\"TestPage_question__15Cn9\",\"anwersItem\":\"TestPage_anwersItem__2c3NU\",\"btnWrapper\":\"TestPage_btnWrapper__16PXy\",\"nextBtn_active\":\"TestPage_nextBtn_active__2fbC6\",\"nextBtn_disabled\":\"TestPage_nextBtn_disabled__3ArWp\"};","import { useState, useEffect } from 'react';\r\nimport s from './TestPage.module.scss';\r\nimport axios from 'axios';\r\nimport { Radio } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from 'redux/questions/questions-actions';\r\n// import 'antd/dist/antd.css';\r\n// import Radio from '@material-ui/core/Radio';\r\n// import RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\naxios.defaults.baseURL = 'https://intense-stream-90411.herokuapp.com';\r\n\r\nexport default function TestPage() {\r\n  const [tests, setTests] = useState(null);\r\n  const [index, setIndex] = useState(0);\r\n  const [value, setValue] = useState(null);\r\n  // const [answers, setAnswers] = useState([]);\r\n\r\n  const dispatch = useDispatch(); //\r\n  // нужно передать значение ответа и id вопроса\r\n  // const addResult = () => dispatch(actions.addResult(value,questionsId));\r\n\r\n  //для примера\r\n  const addResult = () => dispatch(actions.addResult('value-1', 'id-1'));\r\n  //функция для 2-ч обработчиков по onClick\r\n  const two = () => {\r\n    moveNext();\r\n    addResult();\r\n  };\r\n\r\n  async function getTests() {\r\n    try {\r\n      const { data } = await axios.get('/tests/technicalQA');\r\n      return data;\r\n    } catch (error) {\r\n      console.log('error', { error });\r\n      return [];\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getTests().then(tests => setTests(tests.data.tests));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    console.log(e.target.value);\r\n    setValue(e.target.value);\r\n  };\r\n  const moveNext = () => {\r\n    if (index === tests.length - 1) {\r\n      return;\r\n    }\r\n    setValue(null);\r\n    setIndex(prevState => prevState + 1);\r\n  };\r\n  const moveBack = () => {\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    setIndex(prevState => prevState - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tests && (\r\n        <section className={s.testsSection}>\r\n          <div className={s.testCard}>\r\n            <p className={s.questionNumber}>\r\n              Question{' '}\r\n              <span className={s.questionNumber_currentQuestion}>{`${\r\n                index + 1\r\n              }`}</span>{' '}\r\n              / 12\r\n            </p>\r\n            <h2 className={s.question}>{tests[index].question}</h2>\r\n            <Radio.Group onChange={handleChange} value={value}>\r\n              {tests[index].answers.map(question => (\r\n                <>\r\n                  <Radio value={question} className={s.anwersItem}>\r\n                    {question}\r\n                  </Radio>\r\n                </>\r\n              ))}\r\n            </Radio.Group>\r\n          </div>\r\n          <div className={s.btnWrapper}>\r\n            {index === 0 ? (\r\n              <button className={s.nextBtn_disabled} disabled>\r\n                Previous question\r\n              </button>\r\n            ) : (\r\n              <button className={s.nextBtn_active} onClick={moveBack}>\r\n                Previous question\r\n              </button>\r\n            )}\r\n            {!value ? (\r\n              <button className={s.nextBtn_disabled} disabled>\r\n                Next question\r\n              </button>\r\n            ) : index === 11 ? (\r\n              <button\r\n                className={s.nextBtn_active}\r\n                // onClick={moveNext}\r\n                // onClick={two}\r\n              >\r\n                Finish test\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className={s.nextBtn_active}\r\n                // onClick={moveNext}\r\n                onClick={two}\r\n              >\r\n                Next question\r\n              </button>\r\n            )}\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// {\r\n//   <FormControl component=\"fieldset\">\r\n//               <FormLabel component=\"legend\">{tests[index].question}</FormLabel>\r\n//               <RadioGroup\r\n//                 aria-label={tests[index].question}\r\n//                 name={tests[index].question}\r\n//                 value={value}\r\n//                 onChange={handleChange}\r\n//               >\r\n//                 {tests[index].answers.map(question => (\r\n//                   <FormControlLabel\r\n//                     className={classes.root}\r\n//                     value={question}\r\n//                     control={<Radio />}\r\n//                     label={question}\r\n//                   />\r\n//                 ))}\r\n//               </RadioGroup>\r\n//             </FormControl>\r\n// }\r\n","import TestPage from 'component/TestPage';\r\n\r\nexport default function TestPageView() {\r\n  return (\r\n    <>\r\n      <TestPage />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}