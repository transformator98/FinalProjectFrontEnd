{"version":3,"sources":["component/TestPage/TestPage.module.scss","component/Results/Results.module.scss","component/Diagram/Diagram.module.scss","component/Diagram/Diagram.js","redux/questions/questions-operations.js","component/Results/cat.svg","component/Results/Results.js","views/ResultPageView.js","component/TestPage/TestPage.js","views/TestPageView.js"],"names":["module","exports","defaults","global","responsive","Diagram","correct","total","pсtCorrect","Math","round","pсtIncorrect","data","labels","datasets","backgroundColor","borderWidth","className","styles","wrapper","diagram","width","height","options","maintainAspectRatio","legend","position","align","display","fontFamily","fontSize","fontColor","boxWidth","rotation","tooltips","callbacks","label","tooltipItem","index","result","text","number","axios","baseURL","getResult","tests","url","dispatch","action","getResultRequest","post","then","getResultSuccess","catch","error","getResultError","message","deleteResult","credentials","deleteResultRequest","delete","deleteResultSuccess","deleteResultError","connect","useSelector","state","testActive","useState","setResult","useEffect","a","console","getUserResult","results","title","subtitle","line","correctAnswers","feedback","src","cat","alt","image","feedbackTitle","feedbackSubtitle","button","onClick","e","preventDefault","TestPageView","TestPage","setTests","setIndex","value","setValue","useDispatch","get","log","getTests","moveNext","length","prevState","s","testsSection","testCard","questionNumber","questionNumber_currentQuestion","question","Group","onChange","target","answers","map","anwersItem","btnWrapper","nextBtn_disabled","disabled","nextBtn_active","actions","addResult"],"mappings":"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","file":"static/js/TestPageView.c13e3706.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"testsSection\":\"TestPage_testsSection__9fHRo\",\"testCard\":\"TestPage_testCard__3r52z\",\"questionNumber\":\"TestPage_questionNumber__36OsB\",\"questionNumber_currentQuestion\":\"TestPage_questionNumber_currentQuestion__1A-LU\",\"question\":\"TestPage_question__15Cn9\",\"anwersItem\":\"TestPage_anwersItem__2c3NU\",\"btnWrapper\":\"TestPage_btnWrapper__16PXy\",\"nextBtn_active\":\"TestPage_nextBtn_active__2fbC6\",\"nextBtn_disabled\":\"TestPage_nextBtn_disabled__3ArWp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Results_wrapper__1vVFq\",\"title\":\"Results_title__2H0iq\",\"subtitle\":\"Results_subtitle__3clRa\",\"line\":\"Results_line__2vw40\",\"image\":\"Results_image__2ZXBv\",\"feedbackTitle\":\"Results_feedbackTitle__37LV0\",\"feedbackSubtitle\":\"Results_feedbackSubtitle__XTdFS\",\"button\":\"Results_button__2gE3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Diagram_wrapper__cMrCY\",\"diagram\":\"Diagram_diagram__31-Kj\",\"result\":\"Diagram_result__1v51d\",\"text\":\"Diagram_text__1qNJE\",\"number\":\"Diagram_number__3FnfZ\"};","import React from 'react';\r\nimport { Pie, defaults } from 'react-chartjs-2';\r\nimport styles from './Diagram.module.scss';\r\n// import \"chartjs-plugin-labels\";\r\n\r\n// defaults.global.legend.position = \"right\";\r\ndefaults.global.responsive = true;\r\n\r\nconst Diagram = ({ correct = 11, total = 12 }) => {\r\n  const pсtCorrect = Math.round((correct * 100) / total);\r\n  const pсtIncorrect = 100 - pсtCorrect;\r\n\r\n  const data = {\r\n    labels: [`${pсtCorrect}% Correct`, `${pсtIncorrect}% Incorrect`],\r\n    datasets: [\r\n      {\r\n        data: [pсtCorrect, pсtIncorrect],\r\n        backgroundColor: ['rgba(255,107,1,1)', 'rgba(215,215,215,1)'],\r\n        borderWidth: 0,\r\n        // hoverOffset: 4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    // plugins: {\r\n    //   labels: {\r\n    //     render: \"label\",\r\n    //     position: \"outside\",\r\n    //   },\r\n    // },\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      position: 'right',\r\n      align: 'center',\r\n      display: true,\r\n      labels: {\r\n        fontFamily: 'Montserrat, sans-serif',\r\n        fontSize: 16,\r\n        fontColor: '#000000',\r\n        boxWidth: 16,\r\n      },\r\n    },\r\n    rotation: 0,\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          let label = data.labels[tooltipItem.index];\r\n          return label;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.diagram}>\r\n        <Pie data={data} width={285} height={285} options={options} />\r\n      </div>\r\n      <div className={styles.result}>\r\n        <p className={styles.text}>\r\n          Correct answers - <span className={styles.number}>{correct}</span>\r\n        </p>\r\n        <p className={styles.text}>\r\n          Total questions - <span className={styles.number}>{total}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diagram;\r\n","import axios from 'axios';\r\n\r\nimport action from './questions-actions';\r\n\r\naxios.defaults.baseURL = 'https://intense-stream-90411.herokuapp.com';\r\n\r\n\r\nexport const getResult = (tests, url) => dispatch => {\r\n  const result = tests;\r\n\r\n\r\n  dispatch(action.getResultRequest());\r\n\r\n  axios\r\n    .post(`/tests/${url}`, result)\r\n    .then(({ data }) => dispatch(action.getResultSuccess(data)))\r\n    .catch(error => dispatch(action.getResultError(error.message)));\r\n};\r\n\r\nexport const deleteResult = (credentials, url) => dispatch => {\r\n  dispatch(action.deleteResultRequest());\r\n\r\n  axios\r\n    .delete(`/tests/${url}`, credentials)\r\n    .then(() => {\r\n      dispatch(action.deleteResultSuccess());\r\n    })\r\n    .catch(error => dispatch(action.deleteResultError(error.message)));\r\n};\r\n","export default __webpack_public_path__ + \"static/media/cat.43cbd1bc.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport styles from './Results.module.scss';\r\nimport Diagram from '../Diagram';\r\nimport {\r\n  getResult,\r\n  deleteResult,\r\n} from '../../redux/questions/questions-operations';\r\nimport cat from './cat.svg';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Results = () => {\r\n\r\n  const tests = useSelector(state => state.tests);\r\n  const testActive = useSelector(state => state.testActive);\r\n  // const testActive = 'testing theory';\r\n  const [result, setResult] = useState(null);\r\n\r\n  const url = testActive === 'technical QA' ? 'technicalQA' : 'testingTheory';\r\n\r\n  useEffect(() => {\r\n    async function getUserResult() {\r\n      try {\r\n        const { data } = await getResult(tests, url);\r\n\r\n        setResult(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getUserResult();\r\n  }, [tests, url]);\r\n\r\n\r\n  const handleTryAgain = e => {\r\n    e.preventDefault();\r\n    deleteResult();\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {result !== null && (\r\n        <div className={styles.wrapper}>\r\n          <div className={styles.results}>\r\n            <h1 className={styles.title}>Results</h1>\r\n            <h2 className={styles.subtitle}>[ Testing theory_]</h2>\r\n            <hr className={styles.line} />\r\n            <Diagram />\r\n            correct={result.correctAnswers} total={result.total}\r\n          </div>\r\n          <div className={styles.feedback}>\r\n            <img src={cat} alt=\"cat\" className={styles.image} />\r\n            <h2 className={styles.feedbackTitle}>Not bad!</h2>\r\n            <h3 className={styles.feedbackSubtitle}>\r\n              But you still need to learn some materials.\r\n            </h3>\r\n            <button className={styles.button} onClick={handleTryAgain}>\r\n              Try again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteResult: () => dispatch(deleteResult()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Results);\r\n","import Results from 'component/Results';\r\n\r\nexport default function TestPageView() {\r\n  return (\r\n    <>\r\n      <Results />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport s from './TestPage.module.scss';\r\nimport axios from 'axios';\r\nimport { Radio } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from 'redux/questions/questions-actions';\r\n// import 'antd/dist/antd.css';\r\n// import Radio from '@material-ui/core/Radio';\r\n// import RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\naxios.defaults.baseURL = 'https://intense-stream-90411.herokuapp.com';\r\n\r\nexport default function TestPage() {\r\n  const [tests, setTests] = useState(null);\r\n  const [index, setIndex] = useState(0);\r\n  const [value, setValue] = useState(null);\r\n  // const [answers, setAnswers] = useState([]);\r\n\r\n  const dispatch = useDispatch(); //\r\n  // нужно передать значение ответа и id вопроса\r\n  // const addResult = () => dispatch(actions.addResult(value,questionsId));\r\n\r\n  //для примера\r\n  const addResult = () => dispatch(actions.addResult('value-1', 'id-1'));\r\n  //функция для 2-ч обработчиков по onClick\r\n  const two = () => {\r\n    moveNext();\r\n    addResult();\r\n  };\r\n\r\n  async function getTests() {\r\n    try {\r\n      const { data } = await axios.get('/tests/technicalQA');\r\n      return data;\r\n    } catch (error) {\r\n      console.log('error', { error });\r\n      return [];\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getTests().then(tests => setTests(tests.data.tests));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    console.log(e.target.value);\r\n    setValue(e.target.value);\r\n  };\r\n  const moveNext = () => {\r\n    if (index === tests.length - 1) {\r\n      return;\r\n    }\r\n    setValue(null);\r\n    setIndex(prevState => prevState + 1);\r\n  };\r\n  const moveBack = () => {\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    setIndex(prevState => prevState - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tests && (\r\n        <section className={s.testsSection}>\r\n          <div className={s.testCard}>\r\n            <p className={s.questionNumber}>\r\n              Question{' '}\r\n              <span className={s.questionNumber_currentQuestion}>{`${\r\n                index + 1\r\n              }`}</span>{' '}\r\n              / 12\r\n            </p>\r\n            <h2 className={s.question}>{tests[index].question}</h2>\r\n            <Radio.Group onChange={handleChange} value={value}>\r\n              {tests[index].answers.map(question => (\r\n                <>\r\n                  <Radio value={question} className={s.anwersItem}>\r\n                    {question}\r\n                  </Radio>\r\n                </>\r\n              ))}\r\n            </Radio.Group>\r\n          </div>\r\n          <div className={s.btnWrapper}>\r\n            {index === 0 ? (\r\n              <button className={s.nextBtn_disabled} disabled>\r\n                Previous question\r\n              </button>\r\n            ) : (\r\n              <button className={s.nextBtn_active} onClick={moveBack}>\r\n                Previous question\r\n              </button>\r\n            )}\r\n            {!value ? (\r\n              <button className={s.nextBtn_disabled} disabled>\r\n                Next question\r\n              </button>\r\n            ) : index === 11 ? (\r\n              <button\r\n                className={s.nextBtn_active}\r\n                // onClick={moveNext}\r\n                // onClick={two}\r\n              >\r\n                Finish test\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className={s.nextBtn_active}\r\n                // onClick={moveNext}\r\n                onClick={two}\r\n              >\r\n                Next question\r\n              </button>\r\n            )}\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// {\r\n//   <FormControl component=\"fieldset\">\r\n//               <FormLabel component=\"legend\">{tests[index].question}</FormLabel>\r\n//               <RadioGroup\r\n//                 aria-label={tests[index].question}\r\n//                 name={tests[index].question}\r\n//                 value={value}\r\n//                 onChange={handleChange}\r\n//               >\r\n//                 {tests[index].answers.map(question => (\r\n//                   <FormControlLabel\r\n//                     className={classes.root}\r\n//                     value={question}\r\n//                     control={<Radio />}\r\n//                     label={question}\r\n//                   />\r\n//                 ))}\r\n//               </RadioGroup>\r\n//             </FormControl>\r\n// }\r\n","import TestPage from 'component/TestPage';\r\n\r\nexport default function TestPageView() {\r\n  return (\r\n    <>\r\n      <TestPage />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}