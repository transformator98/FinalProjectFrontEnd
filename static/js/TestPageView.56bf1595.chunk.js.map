{"version":3,"sources":["component/TestPage/TestPage.module.scss","component/Results/Results.module.scss","component/Diagram/Diagram.module.scss","component/Diagram/Diagram.js","redux/questions/questions-operations.js","component/Results/cat.svg","component/Results/Results.js","views/ResultPageView.js","component/TestPage/TestPage.js","views/TestPageView.js"],"names":["module","exports","defaults","global","responsive","Diagram","correct","total","pсtCorrect","Math","round","pсtIncorrect","data","labels","datasets","backgroundColor","borderWidth","className","styles","wrapper","diagram","width","height","options","maintainAspectRatio","legend","position","align","display","fontFamily","fontSize","fontColor","boxWidth","rotation","tooltips","callbacks","label","tooltipItem","index","result","text","number","axios","baseURL","getResult","tests","url","dispatch","action","getResultRequest","post","then","getResultSuccess","catch","error","getResultError","message","deleteResult","credentials","deleteResultRequest","delete","deleteResultSuccess","deleteResultError","connect","useSelector","state","testActive","useState","setResult","useEffect","a","console","getUserResult","results","title","subtitle","line","correctAnswers","feedback","src","cat","alt","image","feedbackTitle","feedbackSubtitle","button","onClick","e","preventDefault","TestPageView","TestPage","setTests","setIndex","value","setValue","useDispatch","get","log","getTests","moveNext","length","prevState","s","testsSection","testCard","questionNumber","questionNumber_currentQuestion","question","Group","onChange","target","answers","map","anwersItem","btnWrapper","nextBtn_disabled","disabled","nextBtn_active","actions","addResult"],"mappings":"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","file":"static/js/TestPageView.56bf1595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"testsSection\":\"TestPage_testsSection__2JcaK\",\"testCard\":\"TestPage_testCard__15fc1\",\"questionNumber\":\"TestPage_questionNumber__3l3Mi\",\"questionNumber_currentQuestion\":\"TestPage_questionNumber_currentQuestion__29eZu\",\"question\":\"TestPage_question__3XkP0\",\"anwersItem\":\"TestPage_anwersItem__16Kkp\",\"btnWrapper\":\"TestPage_btnWrapper__1aqxL\",\"nextBtn_active\":\"TestPage_nextBtn_active__3dTug\",\"nextBtn_disabled\":\"TestPage_nextBtn_disabled__YzM--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Results_wrapper__2RFAG\",\"title\":\"Results_title__1CdCh\",\"subtitle\":\"Results_subtitle__1REAJ\",\"line\":\"Results_line__2rt7X\",\"image\":\"Results_image__2uhOA\",\"feedbackTitle\":\"Results_feedbackTitle__2VAX2\",\"feedbackSubtitle\":\"Results_feedbackSubtitle__2WA_R\",\"button\":\"Results_button__2pTTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Diagram_wrapper__1weDQ\",\"diagram\":\"Diagram_diagram__2TRbC\",\"result\":\"Diagram_result__uzvSZ\",\"text\":\"Diagram_text__1mxET\",\"number\":\"Diagram_number__3XFMo\"};","import React from 'react';\nimport { Pie, defaults } from 'react-chartjs-2';\nimport styles from './Diagram.module.scss';\n// import \"chartjs-plugin-labels\";\n\n// defaults.global.legend.position = \"right\";\ndefaults.global.responsive = true;\n\nconst Diagram = ({ correct = 11, total = 12 }) => {\n  const pсtCorrect = Math.round((correct * 100) / total);\n  const pсtIncorrect = 100 - pсtCorrect;\n\n  const data = {\n    labels: [`${pсtCorrect}% Correct`, `${pсtIncorrect}% Incorrect`],\n    datasets: [\n      {\n        data: [pсtCorrect, pсtIncorrect],\n        backgroundColor: ['rgba(255,107,1,1)', 'rgba(215,215,215,1)'],\n        borderWidth: 0,\n        // hoverOffset: 4,\n      },\n    ],\n  };\n\n  const options = {\n    // plugins: {\n    //   labels: {\n    //     render: \"label\",\n    //     position: \"outside\",\n    //   },\n    // },\n    maintainAspectRatio: false,\n    legend: {\n      position: 'right',\n      align: 'center',\n      display: true,\n      labels: {\n        fontFamily: 'Montserrat, sans-serif',\n        fontSize: 16,\n        fontColor: '#000000',\n        boxWidth: 16,\n      },\n    },\n    rotation: 0,\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem, data) {\n          let label = data.labels[tooltipItem.index];\n          return label;\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.diagram}>\n        <Pie data={data} width={285} height={285} options={options} />\n      </div>\n      <div className={styles.result}>\n        <p className={styles.text}>\n          Correct answers - <span className={styles.number}>{correct}</span>\n        </p>\n        <p className={styles.text}>\n          Total questions - <span className={styles.number}>{total}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Diagram;\n","import axios from 'axios';\n\nimport action from './questions-actions';\n\naxios.defaults.baseURL = 'https://intense-stream-90411.herokuapp.com';\n\n\nexport const getResult = (tests, url) => dispatch => {\n  const result = tests;\n\n\n  dispatch(action.getResultRequest());\n\n  axios\n    .post(`/tests/${url}`, result)\n    .then(({ data }) => dispatch(action.getResultSuccess(data)))\n    .catch(error => dispatch(action.getResultError(error.message)));\n};\n\nexport const deleteResult = (credentials, url) => dispatch => {\n  dispatch(action.deleteResultRequest());\n\n  axios\n    .delete(`/tests/${url}`, credentials)\n    .then(() => {\n      dispatch(action.deleteResultSuccess());\n    })\n    .catch(error => dispatch(action.deleteResultError(error.message)));\n};\n","export default __webpack_public_path__ + \"static/media/cat.43cbd1bc.svg\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport styles from './Results.module.scss';\nimport Diagram from '../Diagram';\nimport {\n  getResult,\n  deleteResult,\n} from '../../redux/questions/questions-operations';\nimport cat from './cat.svg';\nimport { connect } from 'react-redux';\n\nconst Results = () => {\n\n  const tests = useSelector(state => state.tests);\n  const testActive = useSelector(state => state.testActive);\n  // const testActive = 'testing theory';\n  const [result, setResult] = useState(null);\n\n  const url = testActive === 'technical QA' ? 'technicalQA' : 'testingTheory';\n\n  useEffect(() => {\n    async function getUserResult() {\n      try {\n        const { data } = await getResult(tests, url);\n\n        setResult(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getUserResult();\n  }, [tests, url]);\n\n\n  const handleTryAgain = e => {\n    e.preventDefault();\n    deleteResult();\n  };\n\n\n  return (\n    <>\n      {result !== null && (\n        <div className={styles.wrapper}>\n          <div className={styles.results}>\n            <h1 className={styles.title}>Results</h1>\n            <h2 className={styles.subtitle}>[ Testing theory_]</h2>\n            <hr className={styles.line} />\n            <Diagram />\n            correct={result.correctAnswers} total={result.total}\n          </div>\n          <div className={styles.feedback}>\n            <img src={cat} alt=\"cat\" className={styles.image} />\n            <h2 className={styles.feedbackTitle}>Not bad!</h2>\n            <h3 className={styles.feedbackSubtitle}>\n              But you still need to learn some materials.\n            </h3>\n            <button className={styles.button} onClick={handleTryAgain}>\n              Try again\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteResult: () => dispatch(deleteResult()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Results);\n","import Results from 'component/Results';\n\nexport default function TestPageView() {\n  return (\n    <>\n      <Results />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport s from './TestPage.module.scss';\nimport axios from 'axios';\nimport { Radio } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport actions from 'redux/questions/questions-actions';\n// import 'antd/dist/antd.css';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormLabel from '@material-ui/core/FormLabel';\n// import { makeStyles } from '@material-ui/core/styles';\n\naxios.defaults.baseURL = 'https://intense-stream-90411.herokuapp.com';\n\nexport default function TestPage() {\n  const [tests, setTests] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [value, setValue] = useState(null);\n  // const [answers, setAnswers] = useState([]);\n\n  const dispatch = useDispatch(); //\n  // нужно передать значение ответа и id вопроса\n  // const addResult = () => dispatch(actions.addResult(value,questionsId));\n\n  //для примера\n  const addResult = () => dispatch(actions.addResult('value-1', 'id-1'));\n  //функция для 2-ч обработчиков по onClick\n  const two = () => {\n    moveNext();\n    addResult();\n  };\n\n  async function getTests() {\n    try {\n      const { data } = await axios.get('/tests/technicalQA');\n      return data;\n    } catch (error) {\n      console.log('error', { error });\n      return [];\n    }\n  }\n  useEffect(() => {\n    getTests().then(tests => setTests(tests.data.tests));\n  }, []);\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setValue(e.target.value);\n  };\n  const moveNext = () => {\n    if (index === tests.length - 1) {\n      return;\n    }\n    setValue(null);\n    setIndex(prevState => prevState + 1);\n  };\n  const moveBack = () => {\n    if (index === -1) {\n      return;\n    }\n    setIndex(prevState => prevState - 1);\n  };\n\n  return (\n    <>\n      {tests && (\n        <section className={s.testsSection}>\n          <div className={s.testCard}>\n            <p className={s.questionNumber}>\n              Question{' '}\n              <span className={s.questionNumber_currentQuestion}>{`${\n                index + 1\n              }`}</span>{' '}\n              / 12\n            </p>\n            <h2 className={s.question}>{tests[index].question}</h2>\n            <Radio.Group onChange={handleChange} value={value}>\n              {tests[index].answers.map(question => (\n                <>\n                  <Radio value={question} className={s.anwersItem}>\n                    {question}\n                  </Radio>\n                </>\n              ))}\n            </Radio.Group>\n          </div>\n          <div className={s.btnWrapper}>\n            {index === 0 ? (\n              <button className={s.nextBtn_disabled} disabled>\n                Previous question\n              </button>\n            ) : (\n              <button className={s.nextBtn_active} onClick={moveBack}>\n                Previous question\n              </button>\n            )}\n            {!value ? (\n              <button className={s.nextBtn_disabled} disabled>\n                Next question\n              </button>\n            ) : index === 11 ? (\n              <button\n                className={s.nextBtn_active}\n                // onClick={moveNext}\n                // onClick={two}\n              >\n                Finish test\n              </button>\n            ) : (\n              <button\n                className={s.nextBtn_active}\n                // onClick={moveNext}\n                onClick={two}\n              >\n                Next question\n              </button>\n            )}\n          </div>\n        </section>\n      )}\n    </>\n  );\n}\n\n// {\n//   <FormControl component=\"fieldset\">\n//               <FormLabel component=\"legend\">{tests[index].question}</FormLabel>\n//               <RadioGroup\n//                 aria-label={tests[index].question}\n//                 name={tests[index].question}\n//                 value={value}\n//                 onChange={handleChange}\n//               >\n//                 {tests[index].answers.map(question => (\n//                   <FormControlLabel\n//                     className={classes.root}\n//                     value={question}\n//                     control={<Radio />}\n//                     label={question}\n//                   />\n//                 ))}\n//               </RadioGroup>\n//             </FormControl>\n// }\n","import TestPage from 'component/TestPage';\r\n\r\nexport default function TestPageView() {\r\n  return (\r\n    <>\r\n      <TestPage />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}