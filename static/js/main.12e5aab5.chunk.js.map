{"version":3,"sources":["component/Container/Container.js","component/AppBar/AppBar.js","component/Loader/Loader.js","component/Diagram/Diagram.js","App.js","index.js"],"names":["Container","children","className","NotFoundView","onLoader","type","color","height","width","ы","timeout","defaults","global","tooltips","enabled","legend","position","Diagram","data","labels","datasets","backgroundColor","borderWidth","options","maintainAspectRatio","fontSize","fontColor","ContactPageView","lazy","AuthPageView","MainPageView","UsefulPageView","App","AppBar","fallback","Loader","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAEe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,ICHrC,IAIeE,EAJM,WACnB,OAAO,0C,iBCiBMC,G,MAfE,WAEf,OACE,cAAC,IAAD,CACEF,UAAU,SACVG,KAAK,QACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,UAAC,EACDC,QAAS,Q,QCVfC,WAASC,OAAOC,SAASC,SAAU,EACnCH,WAASC,OAAOG,OAAOC,SAAW,QAElC,IA8BeC,EA9BC,WACd,OACE,8BACE,cAAC,MAAD,CACEC,KAAM,CACJC,OAAQ,CAAC,YAAa,WACtBC,SAAU,CACR,CACEF,KAAM,CAAC,EAAG,IACVG,gBAAiB,CAAC,sBAAuB,qBACzCC,YAAa,KAInBf,OAAQ,IACRC,MAAO,IACPe,QAAS,CACPC,qBAAqB,EACrBT,OAAQ,CACNI,OAAQ,CACNM,SAAU,GACVC,UAAW,kB,eCZzB,kCAEA,IAAMC,EAAkBC,gBAAK,kBAC3B,iCAEIC,EAAeD,gBAAK,kBACxB,iCAEIE,EAAeF,gBAAK,kBACxB,iCAEIG,EAAiBH,gBAAK,kBAC1B,iCAEIzB,EAAeyB,gBAAK,kBACxB,iCAGa,SAASI,IACtB,OACE,eAAC,EAAD,WACE,cAACC,EAAD,IACA,eAAC,WAAD,CAAUC,SAAU,cAACC,EAAD,IAApB,UAGE,cAACR,EAAD,IAIA,cAACE,EAAD,IAIA,cAACC,EAAD,IAIA,cAACC,EAAD,IAIA,cAAC,EAAD,OAIF,cAAC,EAAD,IACA,cAAC,IAAD,CACEf,SAAS,YACToB,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,O,OCzDpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAIQ,cAACd,EAAD,MAKRe,SAASC,eAAe,U","file":"static/js/main.12e5aab5.chunk.js","sourcesContent":["import './Container.scss';\n\nexport default function Container({ children }) {\n  return <div className=\"container\">{children}</div>;\n}\n","const NotFoundView = () => {\n  return <h1>APP BAR</h1>;\n};\n\nexport default NotFoundView;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst onLoader = () => {\n  // console.log('state', state.auth.user);\n  return (\n    <Loader\n      className=\"loader\"\n      type=\"Audio\"\n      color=\"#464646\"\n      height={40}\n      width={40}\n      ы\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default onLoader;\n","import React from 'react';\nimport { Pie, defaults } from 'react-chartjs-2';\n\ndefaults.global.tooltips.enabled = false;\ndefaults.global.legend.position = 'right';\n\nconst Diagram = () => {\n  return (\n    <div>\n      <Pie\n        data={{\n          labels: ['Incorrect', 'Correct'],\n          datasets: [\n            {\n              data: [8, 92],\n              backgroundColor: ['rgba(215,215,215,1)', 'rgba(255,107,1,1)'],\n              borderWidth: 0,\n            },\n          ],\n        }}\n        height={285}\n        width={285}\n        options={{\n          maintainAspectRatio: false,\n          legend: {\n            labels: {\n              fontSize: 16,\n              fontColor: '#000000',\n            },\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Diagram;\n","// import { Switch } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { authOperations, authSelectors } from 'redux/auth';\n\nimport Container from 'component/Container';\nimport AppBar from 'component/AppBar';\nimport Loader from 'component/Loader';\n// import PrivateRoute from 'component/PrivateRoute';\n// import PublicRoute from 'component/PublicRoute';\n\nimport Diagram from 'component/Diagram'; // !!!TEMPORARY ADDED\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport('typeface-montserrat');\n\nconst ContactPageView = lazy(() =>\n  import('views/ContactPageView' /* webpackChunkName: \"ContactPageView\" */),\n);\nconst AuthPageView = lazy(() =>\n  import('views/AuthPageView/AuthPageView' /*AuthPageViewChunkName: \"AuthPageView\" */),\n);\nconst MainPageView = lazy(() =>\n  import('views/MainPageView' /* webpackChunkName: \"MainPageView\" */),\n);\nconst UsefulPageView = lazy(() =>\n  import('views/UsefulPageView' /* webpackChunkName: \"UsefulPageView\" */),\n);\nconst NotFoundView = lazy(() =>\n  import('views/NotFoundView' /* webpackChunkName: \"NotFoundView\" */),\n);\n\nexport default function App() {\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<Loader />}>\n        {/* <Switch> */}\n        {/* <PublicRoute path=\"/contacts\"> */}\n        <ContactPageView />\n        {/* </PublicRoute> */}\n\n        {/* <PublicRoute path=\"/auth\"> */}\n        <AuthPageView />\n        {/* </PublicRoute> */}\n\n        {/* <PrivateRoute path=\"/\" exact> */}\n        <MainPageView />\n        {/* </PrivateRoute> */}\n\n        {/* <PrivateRoute path=\"/useful-info\"> */}\n        <UsefulPageView />\n        {/* </PrivateRoute> */}\n\n        {/* <PublicRoute> */}\n        <NotFoundView />\n        {/* </PublicRoute> */}\n        {/* </Switch> */}\n      </Suspense>\n      <Diagram />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n// import { Provider } from 'react-redux';\n// import { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import { store, persistor } from './redux/store';\n// import Loader from 'component/Loader';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n      {/* <PersistGate loading={<Loader />} persistor={persistor}> */}\n        {/* <BrowserRouter> */}\n          <App />\n        {/* </BrowserRouter> */}\n      {/* </PersistGate> */}\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}